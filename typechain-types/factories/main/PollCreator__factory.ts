/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { PollCreator, PollCreatorInterface } from "../../main/PollCreator";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "QUORUM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes",
        name: "_proposal",
        type: "bytes",
      },
    ],
    name: "createPoll",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "POLL_CREATION_COST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "QUOTA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "POLL_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ILivepeerToken",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "poll",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "proposal",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quorum",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quota",
        type: "uint256",
      },
    ],
    name: "PollCreated",
    type: "event",
  },
];

export class PollCreator__factory {
  static readonly abi = _abi;
  static createInterface(): PollCreatorInterface {
    return new utils.Interface(_abi) as PollCreatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PollCreator {
    return new Contract(address, _abi, signerOrProvider) as PollCreator;
  }
}
